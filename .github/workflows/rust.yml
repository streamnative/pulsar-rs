name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --features protobuf-src
      - name: Check Clippy
        run: |
          cargo clippy --tests --features telemetry,protobuf-src -- -D warnings
          cargo clippy --tests --no-default-features --features compression,tokio-rustls-runtime,async-std-rustls-runtime,auth-oauth2,telemetry,protobuf-src -- -D warnings
      - name: Install nightly rustfmt
        run: rustup toolchain install nightly --component rustfmt
      - name: Check format
        run: cargo +nightly fmt --all --check

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pulsar-version: [ 2.10.6, 2.11.4, 3.0.8, 3.2.4, 3.3.3, 4.0.1 ]
    steps:
      - name: Start Pulsar Standalone Container
        run: docker run --name pulsar -p 6650:6650 -p 8080:8080 -p 8081:8081 -p 6651:6651 -p 8443:8443 -v $PWD/.github/certs:/certs -d -e GITHUB_ACTIONS=true -e CI=true -e PULSAR_PREFIX_brokerServicePortTls=6651 -e PULSAR_PREFIX_webServicePortTls=8443 -e PULSAR_PREFIX_tlsEnabled=true -e PULSAR_PREFIX_tlsCertificateFilePath=/certs/server.cert.pem -e PULSAR_PREFIX_tlsKeyFilePath=/certs/server.key-pk8.pem -e PULSAR_PREFIX_tlsTrustCertsFilePath=/certs/ca.cert.pem apachepulsar/pulsar:3.1.3 bash -c “/pulsar/bin/apply-config-from-env.py /pulsar/conf/standalone.conf && /pulsar/bin/pulsar standalone”
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --features protobuf-src -- --nocapture
